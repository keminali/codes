(display "save the residual in a file") (newline)

    (let (( writefile(lambda (p)
  (define np (length (residual-history "iteration")))
	(let loop ((i 0))
  (if (not (= i np))
  (begin (define j (+ i 1))
  (display (list-ref (residual-history "iteration") (- np j)) p) (display " " p)
  (display (list-ref (residual-history "continuity") (- np j)) p) (display " " p)
  (display (list-ref (residual-history "x-velocity") (- np j)) p) (display " " p)
  (display (list-ref (residual-history "y-velocity") (- np j)) p) (display " " p)
  (display (list-ref (residual-history "z-velocity") (- np j)) p) (display " " p)
  (display (list-ref (residual-history "k") (- np j)) p) (display " " p)
  (display (list-ref (residual-history "omega") (- np j)) p)
  (newline p)
  (loop (+ i 1))
  	)
		)
		)
		))
	(output-port (open-output-file "res_e387_new_sfr_15p_tsr55_2k.dat")))
    (writefile output-port)
    (close-output-port output-port)) 